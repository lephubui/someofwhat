Var s of type int [line: 2]
!   Child: 0  Id: s [line: 2]
Sibling: 0  Var t of type char [line: 3]
!   Child: 0  Const: '"' [line: 3]
Sibling: 1  Var u of type char [line: 4]
!   Child: 0  Const: ''' [line: 4]
Sibling: 2  Func main returns type void [line: 6]
!   Child: 1  Compound [line: 6]
!   !   Child: 0  Var i of type int [line: 7]
!   !   !   Child: 0  Const: 666 [line: 7]
!   !   Sibling: 0  Var a of type int [line: 8]
!   !   !   Child: 0  Const: 666 [line: 8]
!   !   Sibling: 1  Var y of type char [line: 9]
!   !   !   Child: 0  Const: 'a' [line: 9]
!   !   Sibling: 2  Var b is array of type char [line: 9]
!   !   !   Child: 0  Const: 'x' [line: 9]
!   !   Sibling: 3  Var x is array of type int [line: 10]
!   !   Sibling: 4  Var k of type int [line: 11]
!   !   !   Child: 0  Op: + [line: 11]
!   !   !   !   Child: 0  Op: * [line: 11]
!   !   !   !   !   Child: 0  Const: 4 [line: 11]
!   !   !   !   !   Child: 1  Const: 5 [line: 11]
!   !   !   !   Child: 1  Const: 3 [line: 11]
!   !   Sibling: 5  Var lenx of type int [line: 11]
!   !   !   Child: 0  Op: * [line: 11]
!   !   !   !   Child: 0  Id: x [line: 11]
!   !   Sibling: 6  Var ba of type bool [line: 12]
!   !   !   Child: 0  Const: true [line: 12]
!   !   Sibling: 7  Var bb of type bool [line: 12]
!   !   !   Child: 0  Op: and [line: 12]
!   !   !   !   Child: 0  Const: true [line: 12]
!   !   !   !   Child: 1  Op: not [line: 12]
!   !   !   !   !   Child: 0  Const: false [line: 12]
!   !   Sibling: 8  Var bc of type bool [line: 12]
!   !   !   Child: 0  Op: > [line: 12]
!   !   !   !   Child: 0  Const: 5 [line: 12]
!   !   !   !   Child: 1  Const: 4 [line: 12]
!   !   Sibling: 9  Var ca of type char [line: 13]
!   !   !   Child: 0  Const: 'a' [line: 13]
!   !   Child: 1  Assign: = [line: 15]
!   !   !   Child: 0  Op: [ [line: 15]
!   !   !   !   Child: 0  Id: x [line: 15]
!   !   !   !   Child: 1  Const: 1 [line: 15]
!   !   !   Child: 1  Const: 111 [line: 15]
!   !   Sibling: 0  Assign: = [line: 16]
!   !   !   Child: 0  Id: a [line: 16]
!   !   !   Child: 1  Op: * [line: 16]
!   !   !   !   Child: 0  Id: b [line: 16]
!   !   Sibling: 1  While [line: 17]
!   !   !   Child: 0  Op: < [line: 17]
!   !   !   !   Child: 0  Id: i [line: 17]
!   !   !   !   Child: 1  Const: 10 [line: 17]
!   !   !   Child: 1  Compound [line: 17]
!   !   !   !   Child: 0  Var y is array of type int [line: 18]
!   !   !   !   Sibling: 0  Var t of type bool [line: 19]
!   !   !   !   Child: 1  If [line: 20]
!   !   !   !   !   Child: 0  Id: t [line: 20]
!   !   !   !   !   Child: 1  Break [line: 20]
!   !   !   !   Sibling: 0  If [line: 21]
!   !   !   !   !   Child: 0  Id: t [line: 21]
!   !   !   !   !   Child: 1  Break [line: 21]
!   !   !   !   !   Child: 2  Return [line: 21]
!   !   !   !   Sibling: 1  Assign: = [line: 22]
!   !   !   !   !   Child: 0  Op: [ [line: 22]
!   !   !   !   !   !   Child: 0  Id: y [line: 22]
!   !   !   !   !   !   Child: 1  Const: 2 [line: 22]
!   !   !   !   !   Child: 1  Const: 222 [line: 22]
!   !   Sibling: 2  Compound [line: 24]
!   !   !   Child: 1  Compound [line: 25]
!   !   !   !   Child: 0  Var z is array of type int [line: 26]
!   !   !   !   Child: 1  Assign: = [line: 27]
!   !   !   !   !   Child: 0  Op: [ [line: 27]
!   !   !   !   !   !   Child: 0  Id: z [line: 27]
!   !   !   !   !   !   Child: 1  Const: 3 [line: 27]
!   !   !   !   !   Child: 1  Const: 333 [line: 27]
!   !   Sibling: 3  Call: output [line: 30]
!   !   !   Child: 0  Const: 666 [line: 30]
