ERROR(16): '+' requires operands of type int but rhs is of type bool.
ERROR(17): '+' requires operands of type int but lhs is of type bool.
ERROR(18): '+' requires operands of type int but lhs is of type bool.
ERROR(18): '+' requires operands of type int but rhs is of type bool.
ERROR(20): 'and' requires operands of type bool but lhs is of type int.
ERROR(20): 'and' requires operands of type bool but rhs is of type int.
ERROR(21): 'and' requires operands of type bool but lhs is of type int.
ERROR(22): 'and' requires operands of type bool but rhs is of type int.
ERROR(26): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(27): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(31): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(32): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(36): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(37): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
WARNING(40): Variable ia may be uninitialized when used here.
ERROR(40): The operation '+' does not work with arrays.
WARNING(41): Variable ba may be uninitialized when used here.
ERROR(41): '+' requires operands of type int but rhs is of type bool.
ERROR(41): The operation '+' does not work with arrays.
ERROR(42): '+' requires operands of type int but lhs is of type bool.
ERROR(42): The operation '+' does not work with arrays.
ERROR(43): '+' requires operands of type int but lhs is of type bool.
ERROR(43): '+' requires operands of type int but rhs is of type bool.
ERROR(43): The operation '+' does not work with arrays.
ERROR(45): 'and' requires operands of type bool but lhs is of type int.
ERROR(45): 'and' requires operands of type bool but rhs is of type int.
ERROR(45): The operation 'and' does not work with arrays.
ERROR(46): 'and' requires operands of type bool but lhs is of type int.
ERROR(46): The operation 'and' does not work with arrays.
ERROR(47): 'and' requires operands of type bool but rhs is of type int.
ERROR(47): The operation 'and' does not work with arrays.
ERROR(48): The operation 'and' does not work with arrays.
ERROR(51): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(52): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(56): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(57): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(60): '+' requires operands of type int but lhs is of type bool.
ERROR(61): '+' requires operands of type int but rhs is of type bool.
ERROR(62): '+' requires operands of type int but rhs is of type bool.
ERROR(64): 'or' requires operands of type bool but lhs is of type int.
ERROR(65): 'or' requires operands of type bool but rhs is of type int.
ERROR(66): 'or' requires operands of type bool but rhs is of type int.
ERROR(69): Unary 'not' requires an operand of type bool but was given type int.
ERROR(70): The operation 'not' does not work with arrays.
ERROR(71): Unary 'not' requires an operand of type bool but was given type int.
ERROR(71): The operation 'not' does not work with arrays.
ERROR(73): Unary '-' requires an operand of type int but was given type bool.
ERROR(75): Unary '-' requires an operand of type int but was given type bool.
ERROR(75): The operation '-' does not work with arrays.
ERROR(76): The operation '-' does not work with arrays.
ERROR(79): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(80): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(81): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(82): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(82): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(106): Cannot use function 'main' as a variable.
ERROR(107): 'i' is a simple variable and cannot be called.
ERROR(109): Cannot index nonarray 'i'.
ERROR(110): Cannot index nonarray 'i'.
ERROR(112): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(113): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(115): Cannot use function 'main' as a variable.
ERROR(116): Array index is the unindexed array 'ia'.
ERROR(118): The operation '*' only works with arrays.
WARNING(9): The variable ca seems not to be used.
Func main returns type int [line: 2]
!   Child: 1  Compound [line: 3]
!   !   Child: 0  Var i of type int [line: 4]
!   !   Sibling: 0  Var b of type bool [line: 5]
!   !   Sibling: 1  Var c of type char [line: 6]
!   !   Sibling: 2  Var ia is array of type int [line: 7]
!   !   Sibling: 3  Var ba is array of type bool [line: 8]
!   !   Sibling: 4  Var ca is array of type char [line: 9]
!   !   Child: 1  Assign: = [type int] [line: 11]
!   !   !   Child: 0  Id: i [type int] [line: 11]
!   !   !   Child: 1  Const: 666 [type int] [line: 11]
!   !   Sibling: 0  Assign: = [type bool] [line: 12]
!   !   !   Child: 0  Id: b [type bool] [line: 12]
!   !   !   Child: 1  Const: true [type bool] [line: 12]
!   !   Sibling: 1  Assign: = [type char] [line: 13]
!   !   !   Child: 0  Id: c [type char] [line: 13]
!   !   !   Child: 1  Const: 'X' [type char] [line: 13]
!   !   Sibling: 2  Op: + [type int] [line: 15]
!   !   !   Child: 0  Id: i [type int] [line: 15]
!   !   !   Child: 1  Id: i [type int] [line: 15]
!   !   Sibling: 3  Op: + [type int] [line: 16]
!   !   !   Child: 0  Id: i [type int] [line: 16]
!   !   !   Child: 1  Id: b [type bool] [line: 16]
!   !   Sibling: 4  Op: + [type int] [line: 17]
!   !   !   Child: 0  Id: b [type bool] [line: 17]
!   !   !   Child: 1  Id: i [type int] [line: 17]
!   !   Sibling: 5  Op: + [type int] [line: 18]
!   !   !   Child: 0  Id: b [type bool] [line: 18]
!   !   !   Child: 1  Id: b [type bool] [line: 18]
!   !   Sibling: 6  Op: and [type bool] [line: 20]
!   !   !   Child: 0  Id: i [type int] [line: 20]
!   !   !   Child: 1  Id: i [type int] [line: 20]
!   !   Sibling: 7  Op: and [type bool] [line: 21]
!   !   !   Child: 0  Id: i [type int] [line: 21]
!   !   !   Child: 1  Id: b [type bool] [line: 21]
!   !   Sibling: 8  Op: and [type bool] [line: 22]
!   !   !   Child: 0  Id: b [type bool] [line: 22]
!   !   !   Child: 1  Id: i [type int] [line: 22]
!   !   Sibling: 9  Op: and [type bool] [line: 23]
!   !   !   Child: 0  Id: b [type bool] [line: 23]
!   !   !   Child: 1  Id: b [type bool] [line: 23]
!   !   Sibling: 10  Assign: = [type int] [line: 25]
!   !   !   Child: 0  Id: i [type int] [line: 25]
!   !   !   Child: 1  Id: i [type int] [line: 25]
!   !   Sibling: 11  Assign: = [type int] [line: 26]
!   !   !   Child: 0  Id: i [type int] [line: 26]
!   !   !   Child: 1  Id: b [type bool] [line: 26]
!   !   Sibling: 12  Assign: = [type bool] [line: 27]
!   !   !   Child: 0  Id: b [type bool] [line: 27]
!   !   !   Child: 1  Id: i [type int] [line: 27]
!   !   Sibling: 13  Assign: = [type bool] [line: 28]
!   !   !   Child: 0  Id: b [type bool] [line: 28]
!   !   !   Child: 1  Id: b [type bool] [line: 28]
!   !   Sibling: 14  Op: == [type bool] [line: 30]
!   !   !   Child: 0  Id: i [type int] [line: 30]
!   !   !   Child: 1  Id: i [type int] [line: 30]
!   !   Sibling: 15  Op: == [type bool] [line: 31]
!   !   !   Child: 0  Id: i [type int] [line: 31]
!   !   !   Child: 1  Id: b [type bool] [line: 31]
!   !   Sibling: 16  Op: == [type bool] [line: 32]
!   !   !   Child: 0  Id: b [type bool] [line: 32]
!   !   !   Child: 1  Id: i [type int] [line: 32]
!   !   Sibling: 17  Op: == [type bool] [line: 33]
!   !   !   Child: 0  Id: b [type bool] [line: 33]
!   !   !   Child: 1  Id: b [type bool] [line: 33]
!   !   Sibling: 18  Op: != [type bool] [line: 35]
!   !   !   Child: 0  Id: i [type int] [line: 35]
!   !   !   Child: 1  Id: i [type int] [line: 35]
!   !   Sibling: 19  Op: != [type bool] [line: 36]
!   !   !   Child: 0  Id: i [type int] [line: 36]
!   !   !   Child: 1  Id: b [type bool] [line: 36]
!   !   Sibling: 20  Op: != [type bool] [line: 37]
!   !   !   Child: 0  Id: b [type bool] [line: 37]
!   !   !   Child: 1  Id: i [type int] [line: 37]
!   !   Sibling: 21  Op: != [type bool] [line: 38]
!   !   !   Child: 0  Id: b [type bool] [line: 38]
!   !   !   Child: 1  Id: b [type bool] [line: 38]
!   !   Sibling: 22  Op: + [type int] [line: 40]
!   !   !   Child: 0  Id: ia [type int] [line: 40]
!   !   !   Child: 1  Id: ia [type int] [line: 40]
!   !   Sibling: 23  Op: + [type int] [line: 41]
!   !   !   Child: 0  Id: ia [type int] [line: 41]
!   !   !   Child: 1  Id: ba [type bool] [line: 41]
!   !   Sibling: 24  Op: + [type int] [line: 42]
!   !   !   Child: 0  Id: ba [type bool] [line: 42]
!   !   !   Child: 1  Id: ia [type int] [line: 42]
!   !   Sibling: 25  Op: + [type int] [line: 43]
!   !   !   Child: 0  Id: ba [type bool] [line: 43]
!   !   !   Child: 1  Id: ba [type bool] [line: 43]
!   !   Sibling: 26  Op: and [type bool] [line: 45]
!   !   !   Child: 0  Id: ia [type int] [line: 45]
!   !   !   Child: 1  Id: ia [type int] [line: 45]
!   !   Sibling: 27  Op: and [type bool] [line: 46]
!   !   !   Child: 0  Id: ia [type int] [line: 46]
!   !   !   Child: 1  Id: ba [type bool] [line: 46]
!   !   Sibling: 28  Op: and [type bool] [line: 47]
!   !   !   Child: 0  Id: ba [type bool] [line: 47]
!   !   !   Child: 1  Id: ia [type int] [line: 47]
!   !   Sibling: 29  Op: and [type bool] [line: 48]
!   !   !   Child: 0  Id: ba [type bool] [line: 48]
!   !   !   Child: 1  Id: ba [type bool] [line: 48]
!   !   Sibling: 30  Assign: = [type int] [line: 50]
!   !   !   Child: 0  Id: ia [type int] [line: 50]
!   !   !   Child: 1  Id: ia [type int] [line: 50]
!   !   Sibling: 31  Assign: = [type int] [line: 51]
!   !   !   Child: 0  Id: ia [type int] [line: 51]
!   !   !   Child: 1  Id: ba [type bool] [line: 51]
!   !   Sibling: 32  Assign: = [type bool] [line: 52]
!   !   !   Child: 0  Id: ba [type bool] [line: 52]
!   !   !   Child: 1  Id: ia [type int] [line: 52]
!   !   Sibling: 33  Assign: = [type bool] [line: 53]
!   !   !   Child: 0  Id: ba [type bool] [line: 53]
!   !   !   Child: 1  Id: ba [type bool] [line: 53]
!   !   Sibling: 34  Op: == [type bool] [line: 55]
!   !   !   Child: 0  Id: ia [type int] [line: 55]
!   !   !   Child: 1  Id: ia [type int] [line: 55]
!   !   Sibling: 35  Op: == [type bool] [line: 56]
!   !   !   Child: 0  Id: ia [type int] [line: 56]
!   !   !   Child: 1  Id: ba [type bool] [line: 56]
!   !   Sibling: 36  Op: == [type bool] [line: 57]
!   !   !   Child: 0  Id: ba [type bool] [line: 57]
!   !   !   Child: 1  Id: ia [type int] [line: 57]
!   !   Sibling: 37  Op: == [type bool] [line: 58]
!   !   !   Child: 0  Id: ba [type bool] [line: 58]
!   !   !   Child: 1  Id: ba [type bool] [line: 58]
!   !   Sibling: 38  Op: + [type int] [line: 60]
!   !   !   Child: 0  Op: + [type int] [line: 60]
!   !   !   !   Child: 0  Id: b [type bool] [line: 60]
!   !   !   !   Child: 1  Id: i [type int] [line: 60]
!   !   !   Child: 1  Id: i [type int] [line: 60]
!   !   Sibling: 39  Op: + [type int] [line: 61]
!   !   !   Child: 0  Op: + [type int] [line: 61]
!   !   !   !   Child: 0  Id: i [type int] [line: 61]
!   !   !   !   Child: 1  Id: b [type bool] [line: 61]
!   !   !   Child: 1  Id: i [type int] [line: 61]
!   !   Sibling: 40  Op: + [type int] [line: 62]
!   !   !   Child: 0  Op: + [type int] [line: 62]
!   !   !   !   Child: 0  Id: i [type int] [line: 62]
!   !   !   !   Child: 1  Id: i [type int] [line: 62]
!   !   !   Child: 1  Id: b [type bool] [line: 62]
!   !   Sibling: 41  Op: or [type bool] [line: 64]
!   !   !   Child: 0  Op: or [type bool] [line: 64]
!   !   !   !   Child: 0  Id: i [type int] [line: 64]
!   !   !   !   Child: 1  Id: b [type bool] [line: 64]
!   !   !   Child: 1  Id: b [type bool] [line: 64]
!   !   Sibling: 42  Op: or [type bool] [line: 65]
!   !   !   Child: 0  Op: or [type bool] [line: 65]
!   !   !   !   Child: 0  Id: b [type bool] [line: 65]
!   !   !   !   Child: 1  Id: i [type int] [line: 65]
!   !   !   Child: 1  Id: b [type bool] [line: 65]
!   !   Sibling: 43  Op: or [type bool] [line: 66]
!   !   !   Child: 0  Op: or [type bool] [line: 66]
!   !   !   !   Child: 0  Id: b [type bool] [line: 66]
!   !   !   !   Child: 1  Id: b [type bool] [line: 66]
!   !   !   Child: 1  Id: i [type int] [line: 66]
!   !   Sibling: 44  Op: not [type bool] [line: 68]
!   !   !   Child: 0  Id: b [type bool] [line: 68]
!   !   Sibling: 45  Op: not [type bool] [line: 69]
!   !   !   Child: 0  Id: i [type int] [line: 69]
!   !   Sibling: 46  Op: not [type bool] [line: 70]
!   !   !   Child: 0  Id: ba [type bool] [line: 70]
!   !   Sibling: 47  Op: not [type bool] [line: 71]
!   !   !   Child: 0  Id: ia [type int] [line: 71]
!   !   Sibling: 48  Op: - [type int] [line: 73]
!   !   !   Child: 0  Id: b [type bool] [line: 73]
!   !   Sibling: 49  Op: - [type int] [line: 74]
!   !   !   Child: 0  Id: i [type int] [line: 74]
!   !   Sibling: 50  Op: - [type int] [line: 75]
!   !   !   Child: 0  Id: ba [type bool] [line: 75]
!   !   Sibling: 51  Op: - [type int] [line: 76]
!   !   !   Child: 0  Id: ia [type int] [line: 76]
!   !   Sibling: 52  Op: or [type bool] [line: 78]
!   !   !   Child: 0  Op: > [type bool] [line: 78]
!   !   !   !   Child: 0  Id: i [type int] [line: 78]
!   !   !   !   Child: 1  Id: i [type int] [line: 78]
!   !   !   Child: 1  Op: > [type bool] [line: 78]
!   !   !   !   Child: 0  Id: i [type int] [line: 78]
!   !   !   !   Child: 1  Id: i [type int] [line: 78]
!   !   Sibling: 53  Op: or [type bool] [line: 79]
!   !   !   Child: 0  Op: > [type bool] [line: 79]
!   !   !   !   Child: 0  Id: b [type bool] [line: 79]
!   !   !   !   Child: 1  Id: i [type int] [line: 79]
!   !   !   Child: 1  Op: > [type bool] [line: 79]
!   !   !   !   Child: 0  Id: i [type int] [line: 79]
!   !   !   !   Child: 1  Id: i [type int] [line: 79]
!   !   Sibling: 54  Op: or [type bool] [line: 80]
!   !   !   Child: 0  Op: > [type bool] [line: 80]
!   !   !   !   Child: 0  Id: i [type int] [line: 80]
!   !   !   !   Child: 1  Id: b [type bool] [line: 80]
!   !   !   Child: 1  Op: > [type bool] [line: 80]
!   !   !   !   Child: 0  Id: i [type int] [line: 80]
!   !   !   !   Child: 1  Id: i [type int] [line: 80]
!   !   Sibling: 55  Op: or [type bool] [line: 81]
!   !   !   Child: 0  Op: > [type bool] [line: 81]
!   !   !   !   Child: 0  Id: i [type int] [line: 81]
!   !   !   !   Child: 1  Id: i [type int] [line: 81]
!   !   !   Child: 1  Op: > [type bool] [line: 81]
!   !   !   !   Child: 0  Id: b [type bool] [line: 81]
!   !   !   !   Child: 1  Id: i [type int] [line: 81]
!   !   Sibling: 56  Op: or [type bool] [line: 82]
!   !   !   Child: 0  Op: > [type bool] [line: 82]
!   !   !   !   Child: 0  Id: b [type bool] [line: 82]
!   !   !   !   Child: 1  Id: i [type int] [line: 82]
!   !   !   Child: 1  Op: > [type bool] [line: 82]
!   !   !   !   Child: 0  Id: i [type int] [line: 82]
!   !   !   !   Child: 1  Id: b [type bool] [line: 82]
!   !   Sibling: 57  Op: and [type bool] [line: 83]
!   !   !   Child: 0  Op: or [type bool] [line: 83]
!   !   !   !   Child: 0  Id: b [type bool] [line: 83]
!   !   !   !   Child: 1  Id: b [type bool] [line: 83]
!   !   !   Child: 1  Op: or [type bool] [line: 83]
!   !   !   !   Child: 0  Id: b [type bool] [line: 83]
!   !   !   !   Child: 1  Id: b [type bool] [line: 83]
!   !   Sibling: 58  If [line: 85]
!   !   !   Child: 0  Const: 1 [type int] [line: 85]
!   !   !   Child: 1  Assign: = [type int] [line: 85]
!   !   !   !   Child: 0  Id: i [type int] [line: 85]
!   !   !   !   Child: 1  Id: i [type int] [line: 85]
!   !   !   Child: 2  Assign: = [type bool] [line: 86]
!   !   !   !   Child: 0  Id: b [type bool] [line: 86]
!   !   !   !   Child: 1  Id: b [type bool] [line: 86]
!   !   Sibling: 59  If [line: 88]
!   !   !   Child: 0  Id: ba [type bool] [line: 88]
!   !   !   Child: 1  Assign: = [type int] [line: 88]
!   !   !   !   Child: 0  Id: i [type int] [line: 88]
!   !   !   !   Child: 1  Id: i [type int] [line: 88]
!   !   !   Child: 2  Assign: = [type bool] [line: 89]
!   !   !   !   Child: 0  Id: b [type bool] [line: 89]
!   !   !   !   Child: 1  Id: b [type bool] [line: 89]
!   !   Sibling: 60  If [line: 91]
!   !   !   Child: 0  Id: ia [type int] [line: 91]
!   !   !   Child: 1  Assign: = [type int] [line: 91]
!   !   !   !   Child: 0  Id: i [type int] [line: 91]
!   !   !   !   Child: 1  Id: i [type int] [line: 91]
!   !   !   Child: 2  Assign: = [type bool] [line: 92]
!   !   !   !   Child: 0  Id: b [type bool] [line: 92]
!   !   !   !   Child: 1  Id: b [type bool] [line: 92]
!   !   Sibling: 61  If [line: 94]
!   !   !   Child: 0  Id: b [type bool] [line: 94]
!   !   !   Child: 1  Assign: = [type int] [line: 94]
!   !   !   !   Child: 0  Id: i [type int] [line: 94]
!   !   !   !   Child: 1  Id: i [type int] [line: 94]
!   !   !   Child: 2  Assign: = [type bool] [line: 95]
!   !   !   !   Child: 0  Id: b [type bool] [line: 95]
!   !   !   !   Child: 1  Id: b [type bool] [line: 95]
!   !   Sibling: 62  If [line: 97]
!   !   !   Child: 0  Id: i [type int] [line: 97]
!   !   !   Child: 1  Assign: = [type int] [line: 97]
!   !   !   !   Child: 0  Id: i [type int] [line: 97]
!   !   !   !   Child: 1  Id: i [type int] [line: 97]
!   !   !   Child: 2  Assign: = [type bool] [line: 98]
!   !   !   !   Child: 0  Id: b [type bool] [line: 98]
!   !   !   !   Child: 1  Id: b [type bool] [line: 98]
!   !   Sibling: 63  While [line: 100]
!   !   !   Child: 0  Const: 1 [type int] [line: 100]
!   !   !   Child: 1  Assign: = [type int] [line: 100]
!   !   !   !   Child: 0  Id: i [type int] [line: 100]
!   !   !   !   Child: 1  Id: i [type int] [line: 100]
!   !   Sibling: 64  While [line: 101]
!   !   !   Child: 0  Id: ba [type bool] [line: 101]
!   !   !   Child: 1  Assign: = [type int] [line: 101]
!   !   !   !   Child: 0  Id: i [type int] [line: 101]
!   !   !   !   Child: 1  Id: i [type int] [line: 101]
!   !   Sibling: 65  While [line: 102]
!   !   !   Child: 0  Id: ia [type int] [line: 102]
!   !   !   Child: 1  Assign: = [type int] [line: 102]
!   !   !   !   Child: 0  Id: i [type int] [line: 102]
!   !   !   !   Child: 1  Id: i [type int] [line: 102]
!   !   Sibling: 66  While [line: 103]
!   !   !   Child: 0  Id: b [type bool] [line: 103]
!   !   !   Child: 1  Assign: = [type int] [line: 103]
!   !   !   !   Child: 0  Id: i [type int] [line: 103]
!   !   !   !   Child: 1  Id: i [type int] [line: 103]
!   !   Sibling: 67  While [line: 104]
!   !   !   Child: 0  Id: i [type int] [line: 104]
!   !   !   Child: 1  Assign: = [type int] [line: 104]
!   !   !   !   Child: 0  Id: i [type int] [line: 104]
!   !   !   !   Child: 1  Id: i [type int] [line: 104]
!   !   Sibling: 68  Assign: = [undefined type] [line: 106]
!   !   !   Child: 0  Id: main [undefined type] [line: 106]
!   !   !   Child: 1  Const: 4 [type int] [line: 106]
!   !   Sibling: 69  Call: i [type int] [line: 107]
!   !   Sibling: 70  Assign: = [type int] [line: 109]
!   !   !   Child: 0  Op: [ [type int] [line: 109]
!   !   !   !   Child: 0  Id: i [type int] [line: 109]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 109]
!   !   !   Child: 1  Const: 0 [type int] [line: 109]
!   !   Sibling: 71  Op: + [type int] [line: 110]
!   !   !   Child: 0  Const: 3 [type int] [line: 110]
!   !   !   Child: 1  Op: [ [type int] [line: 110]
!   !   !   !   Child: 0  Id: i [type int] [line: 110]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 110]
!   !   Sibling: 72  Assign: = [type int] [line: 112]
!   !   !   Child: 0  Op: [ [type int] [line: 112]
!   !   !   !   Child: 0  Id: ia [type int] [line: 112]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 112]
!   !   !   Child: 1  Const: 'a' [type char] [line: 112]
!   !   Sibling: 73  Assign: = [type int] [line: 113]
!   !   !   Child: 0  Op: [ [type int] [line: 113]
!   !   !   !   Child: 0  Id: ia [type int] [line: 113]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 113]
!   !   !   Child: 1  Const: true [type bool] [line: 113]
!   !   Sibling: 74  Op: [ [type int] [line: 114]
!   !   !   Child: 0  Id: ia [type int] [line: 114]
!   !   !   Child: 1  Op: [ [type int] [line: 114]
!   !   !   !   Child: 0  Id: ia [type int] [line: 114]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 114]
!   !   Sibling: 75  Op: [ [type int] [line: 115]
!   !   !   Child: 0  Id: ia [type int] [line: 115]
!   !   !   Child: 1  Id: main [undefined type] [line: 115]
!   !   Sibling: 76  Op: [ [type int] [line: 116]
!   !   !   Child: 0  Id: ia [type int] [line: 116]
!   !   !   Child: 1  Id: ia [type int] [line: 116]
!   !   Sibling: 77  Op: * [type int] [line: 117]
!   !   !   Child: 0  Id: ia [type int] [line: 117]
!   !   Sibling: 78  Op: * [type int] [line: 118]
!   !   !   Child: 0  Id: i [type int] [line: 118]
Number of warnings: 3
Number of errors: 62
