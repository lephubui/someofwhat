ERROR(8): Symbol 'z' is not declared.
WARNING(8): The variable y seems not to be used.
ERROR(9): Symbol 'z' is not declared.
WARNING(9): The variable y seems not to be used.
ERROR(11): Symbol 'lyra' is already declared at line 10.
ERROR(14): Symbol 'asha' is not declared.
ERROR(14): Symbol 'bree' is not declared.
ERROR(14): Symbol 'cloe' is not declared.
WARNING(14): The variable lyra seems not to be used.
ERROR(17): Symbol 'y' is not declared.
ERROR(17): Symbol 'z' is not declared.
ERROR(18): Symbol 'y' is not declared.
ERROR(18): Symbol 'z' is not declared.
ERROR(19): Symbol 'x' is already declared at line 5.
WARNING(3): The variable c seems not to be used.
WARNING(3): The variable d seems not to be used.
WARNING(19): The variable y seems not to be used.
WARNING(19): The variable z seems not to be used.
ERROR(LINKER): Procedure main is not declared.
Var iorek of type int [line: 1]
Sibling: 0  Func dog returns type int [line: 3]
!   Child: 0  Param b of type bool [line: 3]
!   Sibling: 0  Param c of type char [line: 3]
!   Sibling: 1  Param d of type char [line: 3]
!   Child: 1  Compound [line: 4]
!   !   Child: 0  Var x of type int [line: 5]
!   !   !   Child: 0  Const: 666 [type int] [line: 5]
!   !   Sibling: 0  Var w of type int [line: 5]
!   !   !   Child: 0  Const: 777 [type int] [line: 5]
!   !   Child: 1  LoopForever [line: 7]
!   !   !   Child: 1  Assign: = [type int] [line: 7]
!   !   !   !   Child: 0  Id: x [type int] [line: 7]
!   !   !   !   Child: 1  Const: 7301 [type int] [line: 7]
!   !   Sibling: 0  Loop [line: 8]
!   !   !   Child: 0  Var y of type int [line: 8]
!   !   !   Child: 1  Range [line: 8]
!   !   !   !   Child: 0  Const: 103 [type int] [line: 8]
!   !   !   !   Child: 1  Const: 107 [type int] [line: 8]
!   !   !   !   Child: 2  Const: 1 [type int] [line: 8]
!   !   !   Child: 2  Assign: = [undefined type] [line: 8]
!   !   !   !   Child: 0  Id: z [undefined type] [line: 8]
!   !   !   !   Child: 1  Const: 900 [type int] [line: 8]
!   !   Sibling: 1  Loop [line: 9]
!   !   !   Child: 0  Var y of type int [line: 9]
!   !   !   Child: 1  Range [line: 9]
!   !   !   !   Child: 0  Const: 217 [type int] [line: 9]
!   !   !   !   Child: 1  Const: 13 [type int] [line: 9]
!   !   !   !   Child: 2  Op: - [type int] [line: 9]
!   !   !   !   !   Child: 0  Const: 63 [type int] [line: 9]
!   !   !   Child: 2  Assign: = [undefined type] [line: 9]
!   !   !   !   Child: 0  Id: z [undefined type] [line: 9]
!   !   !   !   Child: 1  Id: x [type int] [line: 9]
!   !   Sibling: 2  Loop [line: 10]
!   !   !   Child: 0  Var lyra of type int [line: 10]
!   !   !   Child: 1  Range [line: 10]
!   !   !   !   Child: 0  Op: * [type int] [line: 10]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 10]
!   !   !   !   !   Child: 1  Id: x [type int] [line: 10]
!   !   !   !   Child: 1  Op: + [type int] [line: 10]
!   !   !   !   !   Child: 0  Id: w [type int] [line: 10]
!   !   !   !   !   Child: 1  Const: 13 [type int] [line: 10]
!   !   !   !   Child: 2  Op: * [type int] [line: 10]
!   !   !   !   !   Child: 0  Id: x [type int] [line: 10]
!   !   !   !   !   Child: 1  Id: w [type int] [line: 10]
!   !   !   Child: 2  Compound [line: 10]
!   !   !   !   Child: 0  Var lyra of type int [line: 11]
!   !   !   !   Child: 1  Assign: = [type int] [line: 12]
!   !   !   !   !   Child: 0  Id: lyra [type int] [line: 12]
!   !   !   !   !   Child: 1  Id: iorek [type int] [line: 12]
!   !   Sibling: 3  Loop [line: 14]
!   !   !   Child: 0  Var lyra of type int [line: 14]
!   !   !   Child: 1  Range [line: 14]
!   !   !   !   Child: 0  Id: asha [undefined type] [line: 14]
!   !   !   !   Child: 1  Id: bree [undefined type] [line: 14]
!   !   !   !   Child: 2  Id: cloe [undefined type] [line: 14]
!   !   Sibling: 4  While [line: 17]
!   !   !   Child: 0  Op: > [type bool] [line: 17]
!   !   !   !   Child: 0  Id: x [type int] [line: 17]
!   !   !   !   Child: 1  Op: + [type int] [line: 17]
!   !   !   !   !   Child: 0  Id: y [undefined type] [line: 17]
!   !   !   !   !   Child: 1  Id: z [undefined type] [line: 17]
!   !   !   Child: 1  Assign: = [type int] [line: 17]
!   !   !   !   Child: 0  Id: x [type int] [line: 17]
!   !   !   !   Child: 1  Const: 6031 [type int] [line: 17]
!   !   Sibling: 5  While [line: 18]
!   !   !   Child: 0  Op: > [type bool] [line: 18]
!   !   !   !   Child: 0  Id: x [type int] [line: 18]
!   !   !   !   Child: 1  Op: + [type int] [line: 18]
!   !   !   !   !   Child: 0  Id: y [undefined type] [line: 18]
!   !   !   !   !   Child: 1  Id: z [undefined type] [line: 18]
!   !   !   Child: 1  Compound [line: 18]
!   !   !   !   Child: 0  Var x of type int [line: 19]
!   !   !   !   Sibling: 0  Var y of type int [line: 19]
!   !   !   !   Sibling: 1  Var z of type int [line: 19]
!   !   !   !   Child: 1  Assign: = [type int] [line: 20]
!   !   !   !   !   Child: 0  Id: x [type int] [line: 20]
!   !   !   !   !   Child: 1  Const: 6031 [type int] [line: 20]
!   !   Sibling: 6  While [line: 22]
!   !   !   Child: 0  Id: b [type bool] [line: 22]
!   !   !   Child: 1  While [line: 22]
!   !   !   !   Child: 0  Id: b [type bool] [line: 22]
Number of warnings: 7
Number of errors: 12
