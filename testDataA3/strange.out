Func main returns type void [line: 1]
!   Child: 0  Param x of type int [line: 1]
!   Child: 1  Compound [line: 2]
!   !   Child: 0  Var y of type int [line: 3]
!   !   Sibling: 0  Var z is array of type int [line: 4]
!   !   Child: 1  Assign: = [type int] [line: 6]
!   !   !   Child: 0  Id: y [type int] [line: 6]
!   !   !   Child: 1  Const: 3 [type int] [line: 6]
!   !   Sibling: 0  Call: main [type void] [line: 7]
!   !   !   Child: 0  Id: y [type int] [line: 7]
!   !   Sibling: 1  Assign: ++ [type int] [line: 8]
!   !   !   Child: 0  Id: y [type int] [line: 8]
!   !   Sibling: 2  Assign: = [type int] [line: 9]
!   !   !   Child: 0  Id: x [type int] [line: 9]
!   !   !   Child: 1  Assign: = [type int] [line: 9]
!   !   !   !   Child: 0  Id: y [type int] [line: 9]
!   !   !   !   Child: 1  Assign: ++ [type int] [line: 9]
!   !   !   !   !   Child: 0  Id: y [type int] [line: 9]
!   !   Sibling: 3  Op: + [type int] [line: 12]
!   !   !   Child: 0  Assign: ++ [type int] [line: 12]
!   !   !   !   Child: 0  Id: y [type int] [line: 12]
!   !   !   Child: 1  Const: 1 [type int] [line: 12]
!   !   Sibling: 4  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: y [type int] [line: 14]
!   !   !   Child: 1  Assign: ++ [type int] [line: 14]
!   !   !   !   Child: 0  Id: y [type int] [line: 14]
!   !   Sibling: 5  Assign: = [type int] [line: 15]
!   !   !   Child: 0  Id: y [type int] [line: 15]
!   !   !   Child: 1  Op: + [type int] [line: 15]
!   !   !   !   Child: 0  Assign: ++ [type int] [line: 15]
!   !   !   !   !   Child: 0  Id: y [type int] [line: 15]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 15]
!   !   Sibling: 6  Call: main [type void] [line: 16]
!   !   !   Child: 0  Assign: ++ [type int] [line: 16]
!   !   !   !   Child: 0  Id: y [type int] [line: 16]
!   !   Sibling: 7  If [line: 19]
!   !   !   Child: 0  Assign: ++ [type int] [line: 19]
!   !   !   !   Child: 0  Id: y [type int] [line: 19]
!   !   !   Child: 1  Assign: = [type int] [line: 19]
!   !   !   !   Child: 0  Id: y [type int] [line: 19]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 19]
!   !   Sibling: 8  If [line: 21]
!   !   !   Child: 0  Assign: = [type int] [line: 21]
!   !   !   !   Child: 0  Id: y [type int] [line: 21]
!   !   !   !   Child: 1  Op: + [type int] [line: 21]
!   !   !   !   !   Child: 0  Id: y [type int] [line: 21]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 21]
!   !   !   Child: 1  Assign: = [type int] [line: 21]
!   !   !   !   Child: 0  Id: y [type int] [line: 21]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 21]
!   !   Sibling: 9  Assign: = [type int] [line: 22]
!   !   !   Child: 0  Op: [ [type int] [line: 22]
!   !   !   !   Child: 0  Id: z [type int] [line: 22]
!   !   !   !   Child: 1  Assign: ++ [type int] [line: 22]
!   !   !   !   !   Child: 0  Id: y [type int] [line: 22]
!   !   !   Child: 1  Const: 6 [type int] [line: 22]
!   !   Sibling: 10  Assign: = [type int] [line: 23]
!   !   !   Child: 0  Op: [ [type int] [line: 23]
!   !   !   !   Child: 0  Id: z [type int] [line: 23]
!   !   !   !   Child: 1  Assign: = [type int] [line: 23]
!   !   !   !   !   Child: 0  Id: y [type int] [line: 23]
!   !   !   !   !   Child: 1  Const: 7 [type int] [line: 23]
!   !   !   Child: 1  Const: 6 [type int] [line: 23]
Number of warnings: 0
Number of errors: 0
